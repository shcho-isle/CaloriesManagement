<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <http pattern="/rest/**" use-expressions="true" name="restSecurityFilterChain" create-session="stateless">
        <http-basic/>
        <intercept-url pattern="/rest/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <csrf disabled="true"/>
    </http>

    <http>
        <intercept-url pattern="/oauth/**" access="permitAll"/>
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/register" access="isAnonymous()"/>

        <intercept-url pattern="/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <form-login login-page="/login" default-target-url="/meals"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/login"/>
        <!--<csrf disabled="true"/>-->
    </http>

    <beans:bean name="githubSource" class="ru.javawebinar.topjava.web.oauth.OauthSource"
                p:accessTokenUrl="https://github.com/login/oauth/access_token"
                p:authorizeUrl="https://github.com/login/oauth/authorize"
                p:loginUrl="https://api.github.com/user"
                p:state="calory_github_csrf_token_auth"
                p:redirectUri="http://localhost:8080/topjava/oauth/github/callback"
                p:clientId="ece0ffd236a9cbb836dc"
                p:clientSecret="a1e77aa21e54a2b2e29caa0ba65d4dbb97e6589c"/>

    <beans:bean name="linkedinSource" class="ru.javawebinar.topjava.web.oauth.OauthSource"
                p:accessTokenUrl="https://www.linkedin.com/oauth/v2/accessToken"
                p:authorizeUrl="https://www.linkedin.com/oauth/v2/authorization"
                p:mailUrl="https://api.github.com/user/emails"
                p:loginUrl="https://api.linkedin.com/v1/people/~:(firstName,lastName,email-address)"
                p:state="calory_linkedin_csrf_token_auth"
                p:redirectUri="http://localhost:8080/topjava/oauth/linkedin/callback"
                p:clientId="863ymlc9kzqgic"
                p:clientSecret="fQFmDsmjBv1XBd9m"/>

    <beans:bean class="ru.javawebinar.topjava.util.PasswordUtil" id="passwordEncoder" factory-method="getPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="passwordEncoder"/>

            <!--
                        <jdbc-user-service data-source-ref="dataSource"
                                           users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"
                                           authorities-by-username-query="
                                                                   SELECT u.email, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.email = ?"
                        />
                        <user-service>
                            <user name="user@yandex.ru" password="password" authorities="ROLE_USER"/>
                            <user name="admin@gmail.com" password="admin" authorities="ROLE_ADMIN"/>
                        </user-service>
            -->
        </authentication-provider>
    </authentication-manager>
</beans:beans>