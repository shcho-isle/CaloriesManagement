<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean class="ru.javawebinar.topjava.web.json.JacksonObjectMapper" id="objectMapper" factory-method="getMapper"/>

    <!-- serve static resources (*.html, ...) from src/main/webapp/ -->
    <mvc:default-servlet-handler/>

    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

    <mvc:annotation-driven conversion-service="conversionService" ignore-default-model-on-redirect="true">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper"/>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
        <property name="formatters">
            <set>
                <bean class="ru.javawebinar.topjava.util.converter.DateTimeFormatters.LocalTimeFormatter"/>
                <bean class="ru.javawebinar.topjava.util.converter.DateTimeFormatters.LocalDateFormatter"/>
            </set>
        </property>
    </bean>

    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" id="converter"/>

    <bean class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters" ref="converter"/>
    </bean>

    <context:property-placeholder location="classpath:oauth2.properties" ignore-unresolvable="true"/>

    <bean name="githubResourceDetails" class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails"
          p:id="github"
          p:clientId="${github.client_id}"
          p:clientSecret="#{systemEnvironment['GITHUB_SECRET']}"
          p:accessTokenUri="https://github.com/login/oauth/access_token"
          p:userAuthorizationUri="https://github.com/login/oauth/authorize"
          p:tokenName="github_oauth2_token"/>

    <bean name="linkedinResourceDetails" class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails"
          p:id="linkedin"
          p:clientId="${linkedin.client_id}"
          p:clientSecret="#{systemEnvironment['LINKEDIN_SECRET']}"
          p:accessTokenUri="https://www.linkedin.com/oauth/v2/accessToken"
          p:userAuthorizationUri="https://www.linkedin.com/oauth/v2/authorization"
          p:tokenName="linkedin_oauth2_token"
    />

    <bean name="facebookResourceDetails" class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails"
          p:id="facebook"
          p:clientId="${facebook.client_id}"
          p:clientSecret="#{systemEnvironment['FACEBOOK_SECRET']}"
          p:accessTokenUri="https://graph.facebook.com/oauth/access_token"
          p:userAuthorizationUri="https://www.facebook.com/dialog/oauth"
          p:tokenName="facebook_oauth2_token"
          p:scope="email"
    />

    <bean name="googleResourceDetails" class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails"
          p:id="google"
          p:clientId="${google.client_id}"
          p:clientSecret="#{systemEnvironment['GOOGLE_SECRET']}"
          p:accessTokenUri="https://accounts.google.com/o/oauth2/token"
          p:userAuthorizationUri="https://accounts.google.com/o/oauth2/auth"
          p:tokenName="google_oauth2_token"
          p:scope="profile"
    />

    <context:component-scan base-package="ru.javawebinar.**.web"/>

    <!--  all resources inside folder src/main/webapp/resources are mapped so they can be referred to inside JSP files -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp"/>

    <!--
        <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"
              p:cacheSeconds="60"
              p:defaultEncoding="UTF-8">
            <property name="basenames">
                <list>
                    <value>messages/app</value>
                </list>
            </property>
        </bean>
    -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:cacheSeconds="60"
          p:defaultEncoding="UTF-8">
        <property name="basenames" value="file:///#{systemEnvironment['TOPJAVA_ROOT']}/config/messages/app"/>
        <property name="fallbackToSystemLocale" value="false"/>
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en"/>
        <property name="cookieName" value="cookieLocale"/>
    </bean>

    <mvc:interceptors>
        <bean class="ru.javawebinar.topjava.web.interceptor.ModelInterceptor"/>

        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>
</beans>