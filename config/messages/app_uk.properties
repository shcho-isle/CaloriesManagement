app.title=Щоденник калорій
app.technology=Використані технології
app.text=проект з реєстрацією/авторизацією та інтерфейсом на основі ролей (USER, ADMIN). Адміністратор може створювати/редагувати/видаляти користувачів, а користувач – керувати своїм профілем та даними (день, їжа, калорії) через UI (по AJAX) та через REST інтерфейс з базовою авторизацією. Можлива фільтрація даних за датою та часом, при цьому колір рядка таблиці їжі залежить від того, чи перевищує сума калорій за день норму (параметр вказаний в профілі користувача). Весь REST інтерфейс покрито JUnit тестами, за допомогою Spring MVC Test та Spring Security Test.
app.footer=Додаток з проекту <a href="https://github.com/JavaOPs/topjava" target=_blank>Maven/ Spring/ Security/ JPA(Hibernate)/ Jackson/jQuery</a>
app.enter=Увійти як
app.profile=профіль
app.register=Зареєструватися
app.registered=Вас зареєстровано. Введіть ваш логін/пароль.

users.title=Список користувачів
users.edit=Редагувати користувача
users.add=Додати користувача
users.name=Ім`я
users.email=Пошта
users.roles=Ролі
users.active=Активний
users.registered=Зареєстровано
users.password=Пароль
users.caloriesPerDay=Калорій в день
user.modificationRestriction=Модифікація Admin/User заборонена

meals.title=Список їжі
meals.edit=Редагувати їжу
meals.add=Додати їжу
meals.startDate=Від дати
meals.endDate=До дати
meals.startTime=З
meals.endTime=До
meals.description=Опис
meals.dateTime=Час
meals.calories=Калорії

common.deleted=Видалено
common.saved=Записано
common.enabled=Активовано
common.disabled=Деактивовано
common.status=Статус
common.search=Шукати

exception.users.duplicate_email=Користувач з такою пощтою вже існує
exception.meals.duplicate_datetime=Ви вже маєте їжу з такою датою/часом